<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo 个人博客]]></title>
    <url>%2Fother%2FHexo%20%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo 个人博客简介Hexo是基于Node.js的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github。使用 GitHubPages + Hexo，一种简单高效的实现方式来搭建个人的博客。 环境准备安装node.js去nodejs官网下载对应系统的安装包，按提示安装。 或 Homebrew 安装方式，此安装方式无需重启 1brew install node 安装Git一般都安装了，查看是否安装 git 命令，没有安装会提示安装。希望下载最新的可以去git官网下载 安装hexo使用npm安装 1sudo npm install -g hexo-cli 安装完成创建并初始化放博客的文件夹,然后定位到存储博客的目录并安装。 123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install 解决 Error: Cannot find module &#39;./build/Release/DTraceProviderBindings&#39; 错误删除node中的 lib/node_modules/hexo-cli 和 bin/hexo 重新安装 目前我安装所用的本地环境如下：(可以通过hexo -v查看） 123456789101112hexo: 3.3.7hexo-cli: 1.0.3os: Darwin 16.5.0 darwin x64http_parser: 2.7.0node: 6.11.0v8: 5.1.281.102uv: 1.11.0zlib: 1.2.11ares: 1.10.1-DEVicu: 58.2modules: 48openssl: 1.0.2k hexo 命令 hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹 hexo server (hexo s) 启动本地web服务，用于博客的预览 hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台） hexo new (hexo n) “postName” 新建文章 hexo new (hexo n) page “pageName” 新建页面 hexo clean 清除缓存文件和已生成的静态文件 hexo d -g #生成部署 (-g部署之前预先生成静态文件)hexo s -g #生成预览 选项 hexo –safe 安全模式，在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。 hexo –debug 调试模式，在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次。 hexo –silent 简洁模式，隐藏终端信息 主题设置hexo 提供很多主题 这里选了一个极简的主题NexT，也是Hexo主题中最受欢迎的一个。 下载主题12cd your-hexo-file #Hexo 站点目录git clone https://github.com/iissnan/hexo-theme-next themes/next 失败的话直接到NexT发布页面下载并解压所下载的压缩包至站点的 themes 目录,需要将文件名改为next。 启用主题打开站点配置文件 _config.yml ,找到 theme 字段，并将其值更改为next 在切换主题之后、验证之前， 我们最好清除 Hexo 的缓存 1234567hexo clean``` 启动 Hexo 本地站点，并开启调试模式（即加上 **--debug**），整个命令是 ```shellhexo s --debug 在服务启动的过程，注意观察命令行输出是否有任何异常信息,这些信息将帮助他人更好的定位错误。使用浏览器访问 http://localhost:4000，检查站点是否正确运行。 主题设定基础配置123456789101112title: #你博客的标题subtitle: #你博客的副标题description: #你博客的描述author: #你的名字language: zh-Hans #语言 中文theme: next #安装的主题名称deploy: #发布 type: git #使用Git 发布 repo: https://github.com/username/username.github.io.git #你的Github仓库 url: http://yoursite.com #你的站点地址permalink: :title/ #url结构 SchemeScheme 是 NexT 为提供多种不同的外观而添加的，目前 NexT 支持三种样式他们是： Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist - Muse 的紧凑版本，整洁有序的单栏外观 Pisces - 双栏 Scheme，小家碧玉似的清新 更改主题配置文件 scheme 关键字 菜单第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标(Font Awesome)。 菜单名称在 {language}.yml 文件中设置。菜单项的图标，对应的字段是 menu_icon，而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。 添加菜单需要创建页面，如标签界面 1hexo new page tags 创建完成后，在对应的目录下找到 index.md 文件，进行如下的修改： 123456---title: tags # 标签名字（可为空）date: 2017-06-29 16:28:46type: &quot;tags&quot; # 将页面的类型设置为 tags,主题将自动为这个页面显示为标签云comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false--- type 有分类 categories 标签 tags 侧栏sidebar 字段来控制侧栏的行为其一是侧栏的位置 sidebar.position left - 靠左放置 right - 靠右放置 其二是侧栏显示的时机 sidebar.display post - 默认行为，在文章页面（拥有目录列表）时显示 always - 在所有页面中都显示 hide - 在所有页面中都隐藏（可以手动展开） remove - 完全移除 头像avatar 设置成头像的链接地址。其中，头像的链接地址可以是完整的互联网或站点内的地址（将头像放置主题目录下的 source/images/ 配置为avatar: /images/avatar.png） 否显示阅读全文将 auto_excerpt 的 enable 设置为 ture 则显示阅读全文 12345# Automatically Excerpt. Not recommend.# Please use &lt;!-- more --&gt; in the post to control excerpt accurately.auto_excerpt: enable: ture # 设置是否显示阅读全文 length: 150 或在文章中使用 手动进行截断，Hexo 提供的方式（推荐） 代码高亮NexT 使用 Tomorrow Theme 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 normal，night， night blue， night bright， night eighties。 可更改 highlight_theme 字段 社交链接链接放置在 social 字段下，一行一个链接。其键值格式是 显示文本: 链接地址。设定链接的图标，对应的字段是 social_icons，图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀） 动画效果use_motion，根据您的需求设置值为 true 或者 false，NexT 默认开启动画效果 12use_motion: true # 开启动画效果use_motion: false # 关闭动画效果 背景动画 canvas_nest 12canvas_nest: true //开启动画canvas_nest: false //关闭动画 背景图片要添加背景图片，首先将图片 background.jpg 放到 /source/uploads/ 目录下，然后，在文件 /css/_custom/custom.styl文件中添加下面一行内容： 1body &#123; background:url(/uploads/background.jpg);&#125; 同样可以添加其它背景，如侧栏背景 sidebar ，头部 header 等。 腾讯公益404页面腾讯公益404页面，寻找丢失儿童，让大家一起关注此项公益事业！ 新建 404.html 页面，放到主题的 source 目录下，内容如下： 123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="回到我的主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; Github Pages设置GitHub Pages 本用于介绍托管在GitHub的项目，不过由于他的空间免费稳定，常用来做搭建博客。 每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是 username/username.github.io ，这是特殊的命名约定。你可以通过 http://username.github.io 来访问你的个人主页。 仓库创建好就可以部署了，要部署到github，需要在站点配置文件_config.xml中作如下修改： 12345deploy: type: git repo: &lt;repository url&gt; #库（Repository）地址 branch: [branch] #分支名称默认 master message: [message] #自定义提交信息 (默认为 Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;) 安装一个扩展：hexo-deployer-git 1npm install hexo-deployer-git --save 然后在命令行中执行 1hexo d 如果出现下面错误，则是因为没有设置好public key所致。 1234Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 解决：在本机生成public key： 1ssh-keygen -t rsa -C "youremail@example.com" 然后在用户主目录里找到.ssh目录，里面有 id_rsa 和 id_rsa.pub 两个文件。然后登陆github，在SSH设置页面添加上 id_rsa.pub 文件中的内容即可。 插件SitemapSitemap 的目的是要避免搜索引擎的爬虫没有完整的收录整个网页的内容，所以提交 Sitemap 是能够补足搜索引擎的不足，进而加速网页的收录速度，达到搜寻引擎友好的目的。 安装 1npm install hexo-generator-sitemap --save 在 Hexo 根目录下的 _config.yml 里配置一下 123sitemap: path: sitemap.xml template: ./sitemap_template.xml 对于国内用户还需要安装插件 hexo-generator-baidu-sitemap 1npm install hexo-generator-baidu-sitemap --save 添加配置 12baidusitemap: path: baidusitemap.xml 完成之后就可以将 sitemap 文件提交谷歌和百度，提交过程可以查看sunshine小小倩的文章。 RSS安装hexo-generator-feed 1npm install hexo-generator-feed --save 然后在 Hexo 根目录下的 _config.yml 里配置一下 1234feed: type: atom #type 表示类型, 是 atom 还是 rss2. path: atom.xml #path 表示 Feed 路径 limit: 20 #limit 最多多少篇最近文章 添加RSS链接,打开 themes/next/_config.yml 文件，rss: 部分修改为 rss: /atom.xml。 Local Search添加百度/谷歌/本地 自定义站点内容搜索 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： 1npm install hexo-generator-searchdb --save 编辑站点配置文件，新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 编辑主题配置文件，启用本地搜索功能： 123# Local searchlocal_search: enable: true 博客管理文章可以直接把写好的文章插入到目录 /_posts 下面，后缀为.MD就行，在文章头部固定格式： 1234title: title #文章的标题，这个才是显示的文章标题，其实文件名不影响date: 2015-09-01 20:33:26 #用命令会自动生成，也可以自己写，所以文章时间可以改categories: categories #文章的分类，这个可以自己定义tags: [tag] #tag，为文章添加标签，方便搜索 或 1hexo new &quot;new article&quot; 文件的开头是属性，采用统一的yaml格式，用三条短横线分隔。 分类和标签格式 12345categories:- 日记tags:- Hexo- node.js 草稿相当于很多博客都有的“私密文章”功能。 1hexo new draft &quot;new draft&quot; 会在 source/_drafts 目录下生成一个 new-draft.md 文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到 _drafts目录之中。 如果你希望强行预览草稿，更改站点配置文件： 1render_drafts: true 或者，如下方式启动server： 1hexo server --drafts 下面这条命令可以把草稿变成文章，或者页面： 1hexo publish [layout] &lt;filename&gt; 参考链接Hexo官网手把手教你使用Hexo + Github Pages搭建个人独立博客Hexo搭建Github-Pages博客填坑教程NexT主题Hexo 入门指南GitHubPages + Hexo — 博客搭建hexo高阶教程]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇博客]]></title>
    <url>%2Fleft%2F%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[第一篇博客一直想写博客的，但一直总是在忙项目，有时间也是玩会儿游戏，最近把游戏卸了，总算有时间了。以后会把写博客养成一个习惯，努力一个星期最少一篇，实在没时间就把之前写到印象笔记的文章重新整理一下。明天把搭建博客的过程写一下。 现在写下来激励自己，加油。]]></content>
      <categories>
        <category>left</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
</search>