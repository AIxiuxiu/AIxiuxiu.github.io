<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XiuXiu</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-30T02:48:42.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>xiuxiu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo 个人博客</title>
    <link href="http://yoursite.com/2017/05/30/other/Hexo%20%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/05/30/other/Hexo 个人博客/</id>
    <published>2017-05-30T04:30:02.000Z</published>
    <updated>2017-06-30T02:48:42.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-个人博客"><a href="#Hexo-个人博客" class="headerlink" title="Hexo 个人博客"></a>Hexo 个人博客</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Hexo是基于<code>Node.js</code>的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github。<br>使用 <code>GitHubPages</code> + <code>Hexo</code>，一种简单高效的实现方式来搭建个人的博客。</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p>去<a href="https://nodejs.org/en/download/" target="_blank" rel="external">nodejs</a>官网下载对应系统的安装包，按提示安装。</p>
<p>或 Homebrew 安装方式，此安装方式无需重启</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install node</div></pre></td></tr></table></figure>
<h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>一般都安装了，查看是否安装 <code>git</code>命令，没有安装会提示安装。<br>希望下载最新的可以去<a href="https://git-scm.com/download" target="_blank" rel="external">git官网下载</a></p>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>使用npm安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g hexo-cli</div></pre></td></tr></table></figure>
<p>安装完成创建并初始化放博客的文件夹,然后定位到存储博客的目录并安装。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo init &lt;folder&gt;</div><div class="line">cd &lt;folder&gt;</div><div class="line">npm install</div></pre></td></tr></table></figure>
<p>解决<code>Error: Cannot find module &#39;./build/Release/DTraceProviderBindings&#39;</code> 错误<br>删除node中的<code>lib/node_modules/hexo-cli</code>和<code>bin/hexo</code>重新安装</p>
<p>目前我安装所用的本地环境如下：(可以通过hexo -v查看）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">hexo: 3.3.7</div><div class="line">hexo-cli: 1.0.3</div><div class="line">os: Darwin 16.5.0 darwin x64</div><div class="line">http_parser: 2.7.0</div><div class="line">node: 6.11.0</div><div class="line">v8: 5.1.281.102</div><div class="line">uv: 1.11.0</div><div class="line">zlib: 1.2.11</div><div class="line">ares: 1.10.1-DEV</div><div class="line">icu: 58.2</div><div class="line">modules: 48</div><div class="line">openssl: 1.0.2k</div></pre></td></tr></table></figure>
<h3 id="hexo-命令"><a href="#hexo-命令" class="headerlink" title="hexo 命令"></a>hexo 命令</h3><ul>
<li>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li>
<li>hexo server (hexo s) 启动本地web服务，用于博客的预览</li>
<li>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）</li>
<li>hexo new (hexo n) “postName” 新建文章</li>
<li>hexo new (hexo n) page “pageName” 新建页面</li>
<li><p>hexo clean 清除缓存文件和已生成的静态文件</p>
<p>hexo d -g #生成部署 (-g部署之前预先生成静态文件)<br>hexo s -g #生成预览</p>
</li>
</ul>
<p>选项</p>
<ol>
<li>hexo –safe 安全模式，在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</li>
<li>hexo –debug 调试模式，在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次。</li>
<li>hexo –silent 简洁模式，隐藏终端信息</li>
</ol>
<h2 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h2><p><a href="https://hexo.io/themes/" target="_blank" rel="external">hexo 提供很多主题</a></p>
<p>这里选了一个极简的主题<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">NexT</a>，也是Hexo主题中最受欢迎的一个。</p>
<h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd your-hexo-file #Hexo 站点目录</div><div class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
<p>失败的话直接到<a href="https://github.com/iissnan/hexo-theme-next/releases" target="_blank" rel="external">NexT发布页面</a>下载并解压所下载的压缩包至站点的 themes 目录,需要将文件名改为next。</p>
<h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>打开<strong>站点配置文件</strong><code>_config.yml</code>,找到 <code>theme</code> 字段，并将其值更改为<code>next</code></p>
<p>在切换主题之后、验证之前， 我们最好清除 Hexo 的缓存</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">``` </div><div class="line"></div><div class="line">启动 Hexo 本地站点，并开启调试模式（即加上 `--debug`），整个命令是</div></pre></td></tr></table></figure>
<p>hexo s –debug<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">在服务启动的过程，注意观察命令行输出是否有任何异常信息,这些信息将帮助他人更好的定位错误。</div><div class="line">使用浏览器访问 http://localhost:4000，检查站点是否正确运行。</div><div class="line"></div><div class="line">### 主题设定</div><div class="line"></div><div class="line">#### 基础配置</div></pre></td></tr></table></figure></p>
<p> title:              #你博客的标题<br> subtitle:           #你博客的副标题<br> description:        #你博客的描述<br> author:             #你的名字<br> language: zh-Hans   #语言 中文<br> theme: next         #安装的主题名称<br> deploy:             #发布<br>   type: git         #使用Git 发布<br>   repo: <a href="https://github.com/username/username.github.io.git" target="_blank" rel="external">https://github.com/username/username.github.io.git</a>    #你的Github仓库</p>
<p> url: <a href="http://yoursite.com">http://yoursite.com</a> #你的站点地址<br> permalink: :title/  #url结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#### Scheme</div><div class="line">Scheme 是 NexT 为提供多种不同的外观而添加的，目前 NexT 支持三种 样式他们是：</div><div class="line"></div><div class="line">* Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</div><div class="line">* Mist - Muse 的紧凑版本，整洁有序的单栏外观</div><div class="line">* Pisces - 双栏 Scheme，小家碧玉似的清新</div><div class="line"></div><div class="line">更改**主题配置文件** `scheme` 关键字</div><div class="line"></div><div class="line">#### 菜单</div><div class="line">第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标([Font Awesome](http://fontawesome.io/))。</div><div class="line"></div><div class="line">菜单名称在`&#123;language&#125;.yml`文件中设置。</div><div class="line">菜单项的图标，对应的字段是 `menu_icon`，而 `enable` 可用于控制是否显示图标，你可以设置成 `false` 来去掉图标。</div><div class="line"></div><div class="line">添加菜单需要创建页面，如标签界面</div></pre></td></tr></table></figure></p>
<p>hexo new page tags<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">创建完成后，在对应的目录下找到index.md文件，进行如下的修改：</div></pre></td></tr></table></figure></p>
<hr>
<p>title: tags # 标签名字（可为空）<br>date: 2017-06-29 16:28:46<br>type: “tags” # 将页面的类型设置为 tags,主题将自动为这个页面显示为标签云</p>
<h2 id="comments-false-如果有启用多说-或者-Disqus-评论，默认页面也会带有评论。需要关闭的话，设置为-false"><a href="#comments-false-如果有启用多说-或者-Disqus-评论，默认页面也会带有评论。需要关闭的话，设置为-false" class="headerlink" title="comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false"></a>comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">type 有分类`categories` 标签`tags`</div><div class="line">#### 侧栏</div><div class="line">`sidebar`字段来控制侧栏的行为</div><div class="line">其一是侧栏的位置`sidebar.position`</div><div class="line"></div><div class="line">* left - 靠左放置</div><div class="line">* right - 靠右放置</div><div class="line"></div><div class="line">其二是侧栏显示的时机`sidebar.display`</div><div class="line"></div><div class="line">* post - 默认行为，在文章页面（拥有目录列表）时显示</div><div class="line">* always - 在所有页面中都显示</div><div class="line">* hide - 在所有页面中都隐藏（可以手动展开）</div><div class="line">* remove - 完全移除</div><div class="line"></div><div class="line">####  头像</div><div class="line">`avatar`设置成头像的链接地址。其中，头像的链接地址可以是完整的互联网或站点内的地址（将头像放置主题目录下的 source/images/ 配置为avatar: /images/avatar.png）</div><div class="line"></div><div class="line">#### 否显示阅读全文</div><div class="line">将 `auto_excerpt` 的 `enable` 设置为 `ture` 则显示阅读全文</div></pre></td></tr></table></figure>
<h1 id="Automatically-Excerpt-Not-recommend"><a href="#Automatically-Excerpt-Not-recommend" class="headerlink" title="Automatically Excerpt. Not recommend."></a>Automatically Excerpt. Not recommend.</h1><h1 id="Please-use-in-the-post-to-control-excerpt-accurately"><a href="#Please-use-in-the-post-to-control-excerpt-accurately" class="headerlink" title="Please use  in the post to control excerpt accurately."></a>Please use <a id="more"></a> in the post to control excerpt accurately.</h1><p>auto_excerpt:<br>  enable: ture # 设置是否显示阅读全文<br>  length: 150<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#### 代码高亮</div><div class="line"></div><div class="line">NexT 使用 [Tomorrow Theme](https://github.com/chriskempson/tomorrow-theme) 作为代码高亮，共有5款主题供你选择。 NexT 默认使用的是 白色的 normal 主题，可选的值有 `normal`，`night`， `night blue`， `night bright`， `night eighties`。</div><div class="line"></div><div class="line">可更改 `highlight_theme` 字段</div><div class="line"></div><div class="line">#### 社交链接</div><div class="line">链接放置在 `social` 字段下，一行一个链接。其键值格式是 显示文本: 链接地址。</div><div class="line">设定链接的图标，对应的字段是 `social_icons`，图标名称 是 Font Awesome 图标的名字（不必带 fa- 前缀）</div><div class="line"></div><div class="line">#### 动画效果</div><div class="line">`use_motion`，根据您的需求设置值为 `true` 或者 `false`，NexT 默认开启动画效果</div></pre></td></tr></table></figure></p>
<p>use_motion: true  # 开启动画效果<br>use_motion: false # 关闭动画效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">背景动画 `canvas_nest`</div></pre></td></tr></table></figure></p>
<p>canvas_nest: true //开启动画<br>canvas_nest: false //关闭动画<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#### 背景图片</div><div class="line">要添加背景图片，首先将图片`background.jpg`放到`/source/uploads/`目录下，然后，在文件`/css/_custom/custom.styl`文件中添加下面一行内容：</div></pre></td></tr></table></figure></p>
<p>body { background:url(/uploads/background.jpg);}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">同样可以添加其它背景，如侧栏背景`sidebar`，头部`header`等。</div><div class="line"></div><div class="line">#### 腾讯公益404页面</div><div class="line">[腾讯公益404页面](http://www.ixirong.com/404.html)，寻找丢失儿童，让大家一起关注此项公益事业！</div><div class="line"></div><div class="line">新建 404.html 页面，放到主题的 source 目录下，内容如下：</div><div class="line"></div><div class="line">```html</div><div class="line">&lt;!DOCTYPE HTML&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">  &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8;&quot;/&gt;</div><div class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge,chrome=1&quot; /&gt;</div><div class="line">  &lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</div><div class="line">  &lt;meta name=&quot;robots&quot; content=&quot;index,follow&quot;/&gt;</div><div class="line">  &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://qzone.qq.com/gy/404/style/404style.css&quot;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">  &lt;script type=&quot;text/plain&quot; src=&quot;http://www.qq.com/404/search_children.js&quot;</div><div class="line">          charset=&quot;utf-8&quot; homePageUrl=&quot;/&quot;</div><div class="line">          homePageName=&quot;回到我的主页&quot;&gt;</div><div class="line">  &lt;/script&gt;</div><div class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/data.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class="line">  &lt;script src=&quot;https://qzone.qq.com/gy/404/page.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>
<h2 id="Github-Pages设置"><a href="#Github-Pages设置" class="headerlink" title="Github Pages设置"></a>Github Pages设置</h2><p>GitHub Pages 本用于介绍托管在GitHub的项目，不过由于他的空间免费稳定，常用来做搭建博客。</p>
<p>每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是<code>username/username.github.io</code>，这是特殊的命名约定。你可以通过<code>http://username.github.io</code> 来访问你的个人主页。</p>
<p>仓库创建好就可以部署了，要部署到github，需要在<strong>站点配置文件</strong>_config.xml中作如下修改：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git  </div><div class="line">  repo: &lt;repository url&gt; #库（Repository）地址</div><div class="line">  branch: [branch] #分支名称默认 master</div><div class="line">  message: [message] #自定义提交信息 (默认为 Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;)</div></pre></td></tr></table></figure>
<p>安装一个扩展：<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="external">hexo-deployer-git</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<p>然后在命令行中执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>如果出现下面错误，则是因为没有设置好public key所致。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Permission denied (publickey).</div><div class="line">fatal: Could not read from remote repository.</div><div class="line">Please make sure you have the correct access rights</div><div class="line">and the repository exists.</div></pre></td></tr></table></figure>
<p>解决：在本机生成public key：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</div></pre></td></tr></table></figure>
<p>然后在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件。然后登陆github，在<a href="https://github.com/settings/keys" target="_blank" rel="external">SSH设置页面</a>添加上id_rsa.pub文件中的内容即可。</p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Sitemap"><a href="#Sitemap" class="headerlink" title="Sitemap"></a>Sitemap</h3><p><a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="external">Sitemap</a> 的目的是要避免搜索引擎的爬虫没有完整的收录整个网页的内容，所以提交 Sitemap 是能够补足搜索引擎的不足，进而加速网页的收录速度，达到搜寻引擎友好的目的。</p>
<p>安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div></pre></td></tr></table></figure>
<p>在 Hexo 根目录下的 _config.yml 里配置一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sitemap:</div><div class="line">    path: sitemap.xml</div><div class="line">    template: ./sitemap_template.xml</div></pre></td></tr></table></figure>
<p>对于国内用户还需要安装插件 <a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="external">hexo-generator-baidu-sitemap</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure>
<p>添加配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">baidusitemap:</div><div class="line">  path: baidusitemap.xml</div></pre></td></tr></table></figure>
<p>完成之后就可以将<code>sitemap文件</code>提交谷歌和百度，提交过程可以查看<a href="https://juejin.im/post/590b451a0ce46300588c43a0" target="_blank" rel="external">sunshine小小倩</a>的文章。</p>
<h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><p>安装<a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure>
<p>然后在 Hexo 根目录下的 _config.yml 里配置一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">feed:</div><div class="line">   type: atom      #type 表示类型, 是 atom 还是 rss2.</div><div class="line">   path: atom.xml  #path 表示 Feed 路径</div><div class="line">   limit: 20       #limit 最多多少篇最近文章</div></pre></td></tr></table></figure>
<p>添加RSS链接,打开<code>themes/next/_config.yml</code>文件，<code>rss:</code>部分修改为<code>rss: /atom.xml</code>。</p>
<h3 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h3><p>添加百度/谷歌/本地 自定义站点内容搜索</p>
<p>安装 <a href="https://github.com/flashlab/hexo-generator-search" target="_blank" rel="external">hexo-generator-searchdb</a>，在站点的根目录下执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure>
<p>编辑<strong>站点配置文件</strong>，新增以下内容到任意位置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line">  format: html</div><div class="line">  limit: 10000</div></pre></td></tr></table></figure>
<p>编辑<strong>主题配置文件</strong>，启用本地搜索功能：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Local search</div><div class="line">local_search:</div><div class="line">  enable: true</div></pre></td></tr></table></figure>
<h2 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h2><h3 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h3><p>可以直接把写好的文章插入到目录/_posts 下面，后缀为.MD就行，在文章头部固定格式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: title   #文章的标题，这个才是显示的文章标题，其实文件名不影响</div><div class="line">date: 2015-09-01 20:33:26   #用命令会自动生成，也可以自己写，所以文章时间可以改</div><div class="line">categories: categories  #文章的分类，这个可以自己定义</div><div class="line">tags: [tag]        #tag，为文章添加标签，方便搜索</div></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new &quot;new article&quot;</div></pre></td></tr></table></figure>
<p>文件的开头是属性，采用统一的yaml格式，用三条短横线分隔。</p>
<p>分类和标签格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">categories:</div><div class="line">- 日记</div><div class="line">tags:</div><div class="line">- Hexo</div><div class="line">- node.js</div></pre></td></tr></table></figure>
<h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><p>相当于很多博客都有的“私密文章”功能。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new draft &quot;new draft&quot;</div></pre></td></tr></table></figure>
<p>会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。</p>
<p>如果你希望强行预览草稿，更改<strong>站点配置文件</strong>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">render_drafts: true</div></pre></td></tr></table></figure>
<p>或者，如下方式启动server：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server --drafts</div></pre></td></tr></table></figure>
<p>下面这条命令可以把草稿变成文章，或者页面：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo publish [layout] &lt;filename&gt;</div></pre></td></tr></table></figure>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="external">Hexo官网</a><br><a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="external">手把手教你使用Hexo + Github Pages搭建个人独立博客</a><br><a href="http://www.jianshu.com/p/35e197cb1273" target="_blank" rel="external">Hexo搭建Github-Pages博客填坑教程</a><br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT主题</a><br><a href="https://wizardforcel.gitbooks.io/markdown-simple-world/hexo-tutor-1.html" target="_blank" rel="external">Hexo 入门指南</a><br><a href="https://custompbwaters.github.io/Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/GitHubPages%20+%20Hexo%E2%80%94%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.html" target="_blank" rel="external">GitHubPages + Hexo — 博客搭建</a><br><a href="https://juejin.im/post/590b451a0ce46300588c43a0" target="_blank" rel="external">hexo高阶教程</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-个人博客&quot;&gt;&lt;a href=&quot;#Hexo-个人博客&quot; class=&quot;headerlink&quot; title=&quot;Hexo 个人博客&quot;&gt;&lt;/a&gt;Hexo 个人博客&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Hexo是基于&lt;code&gt;Node.js&lt;/code&gt;的静态博客框架，简单、轻量，其生成的静态网页可以托管在Github。&lt;br&gt;使用 &lt;code&gt;GitHubPages&lt;/code&gt; + &lt;code&gt;Hexo&lt;/code&gt;，一种简单高效的实现方式来搭建个人的博客。&lt;/p&gt;
&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;h3 id=&quot;安装node-js&quot;&gt;&lt;a href=&quot;#安装node-js&quot; class=&quot;headerlink&quot; title=&quot;安装node.js&quot;&gt;&lt;/a&gt;安装node.js&lt;/h3&gt;&lt;p&gt;去&lt;a href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nodejs&lt;/a&gt;官网下载对应系统的安装包，按提示安装。&lt;/p&gt;
&lt;p&gt;或 Homebrew 安装方式，此安装方式无需重启&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;brew install node&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;安装Git&quot;&gt;&lt;a href=&quot;#安装Git&quot; class=&quot;headerlink&quot; title=&quot;安装Git&quot;&gt;&lt;/a&gt;安装Git&lt;/h3&gt;&lt;p&gt;一般都安装了，查看是否安装 &lt;code&gt;git&lt;/code&gt;命令，没有安装会提示安装。&lt;br&gt;希望下载最新的可以去&lt;a href=&quot;https://git-scm.com/download&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git官网下载&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装hexo&quot;&gt;&lt;a href=&quot;#安装hexo&quot; class=&quot;headerlink&quot; title=&quot;安装hexo&quot;&gt;&lt;/a&gt;安装hexo&lt;/h3&gt;&lt;p&gt;使用npm安装&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo npm install -g hexo-cli&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装完成创建并初始化放博客的文件夹,然后定位到存储博客的目录并安装。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo init &amp;lt;folder&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd &amp;lt;folder&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决&lt;code&gt;Error: Cannot find module &amp;#39;./build/Release/DTraceProviderBindings&amp;#39;&lt;/code&gt; 错误&lt;br&gt;删除node中的&lt;code&gt;lib/node_modules/hexo-cli&lt;/code&gt;和&lt;code&gt;bin/hexo&lt;/code&gt;重新安装&lt;/p&gt;
&lt;p&gt;目前我安装所用的本地环境如下：(可以通过hexo -v查看）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo: 3.3.7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo-cli: 1.0.3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;os: Darwin 16.5.0 darwin x64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;http_parser: 2.7.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;node: 6.11.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;v8: 5.1.281.102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;uv: 1.11.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;zlib: 1.2.11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ares: 1.10.1-DEV&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;icu: 58.2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;modules: 48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;openssl: 1.0.2k&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;hexo-命令&quot;&gt;&lt;a href=&quot;#hexo-命令&quot; class=&quot;headerlink&quot; title=&quot;hexo 命令&quot;&gt;&lt;/a&gt;hexo 命令&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹&lt;/li&gt;
&lt;li&gt;hexo server (hexo s) 启动本地web服务，用于博客的预览&lt;/li&gt;
&lt;li&gt;hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）&lt;/li&gt;
&lt;li&gt;hexo new (hexo n) “postName” 新建文章&lt;/li&gt;
&lt;li&gt;hexo new (hexo n) page “pageName” 新建页面&lt;/li&gt;
&lt;li&gt;&lt;p&gt;hexo clean 清除缓存文件和已生成的静态文件&lt;/p&gt;
&lt;p&gt;hexo d -g #生成部署 (-g部署之前预先生成静态文件)&lt;br&gt;hexo s -g #生成预览&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选项&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;hexo –safe 安全模式，在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。&lt;/li&gt;
&lt;li&gt;hexo –debug 调试模式，在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次。&lt;/li&gt;
&lt;li&gt;hexo –silent 简洁模式，隐藏终端信息&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;主题设置&quot;&gt;&lt;a href=&quot;#主题设置&quot; class=&quot;headerlink&quot; title=&quot;主题设置&quot;&gt;&lt;/a&gt;主题设置&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo 提供很多主题&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里选了一个极简的主题&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT&lt;/a&gt;，也是Hexo主题中最受欢迎的一个。&lt;/p&gt;
&lt;h3 id=&quot;下载主题&quot;&gt;&lt;a href=&quot;#下载主题&quot; class=&quot;headerlink&quot; title=&quot;下载主题&quot;&gt;&lt;/a&gt;下载主题&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cd your-hexo-file #Hexo 站点目录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git clone https://github.com/iissnan/hexo-theme-next themes/next&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;失败的话直接到&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT发布页面&lt;/a&gt;下载并解压所下载的压缩包至站点的 themes 目录,需要将文件名改为next。&lt;/p&gt;
&lt;h3 id=&quot;启用主题&quot;&gt;&lt;a href=&quot;#启用主题&quot; class=&quot;headerlink&quot; title=&quot;启用主题&quot;&gt;&lt;/a&gt;启用主题&lt;/h3&gt;&lt;p&gt;打开&lt;strong&gt;站点配置文件&lt;/strong&gt;&lt;code&gt;_config.yml&lt;/code&gt;,找到 &lt;code&gt;theme&lt;/code&gt; 字段，并将其值更改为&lt;code&gt;next&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在切换主题之后、验证之前， 我们最好清除 Hexo 的缓存&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo clean&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;``` &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;启动 Hexo 本地站点，并开启调试模式（即加上 `--debug`），整个命令是&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hexo s –debug&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;在服务启动的过程，注意观察命令行输出是否有任何异常信息,这些信息将帮助他人更好的定位错误。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;使用浏览器访问 http://localhost:4000，检查站点是否正确运行。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;### 主题设定&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#### 基础配置&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; title:              #你博客的标题&lt;br&gt; subtitle:           #你博客的副标题&lt;br&gt; description:        #你博客的描述&lt;br&gt; author:             #你的名字&lt;br&gt; language: zh-Hans   #语言 中文&lt;br&gt; theme: next         #安装的主题名称&lt;br&gt; deploy:             #发布&lt;br&gt;   type: git         #使用Git 发布&lt;br&gt;   repo: &lt;a href=&quot;https://github.com/username/username.github.io.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/username/username.github.io.git&lt;/a&gt;    #你的Github仓库&lt;/p&gt;
&lt;p&gt; url: &lt;a href=&quot;http://yoursite.com&quot;&gt;http://yoursite.com&lt;/a&gt; #你的站点地址&lt;br&gt; permalink: :title/  #url结构&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#### Scheme&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Scheme 是 NexT 为提供多种不同的外观而添加的，目前 NexT 支持三种 样式他们是：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* Mist - Muse 的紧凑版本，整洁有序的单栏外观&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* Pisces - 双栏 Scheme，小家碧玉似的清新&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;更改**主题配置文件** `scheme` 关键字&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#### 菜单&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标([Font Awesome](http://fontawesome.io/))。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;菜单名称在`&amp;#123;language&amp;#125;.yml`文件中设置。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;菜单项的图标，对应的字段是 `menu_icon`，而 `enable` 可用于控制是否显示图标，你可以设置成 `false` 来去掉图标。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;添加菜单需要创建页面，如标签界面&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;hexo new page tags&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;创建完成后，在对应的目录下找到index.md文件，进行如下的修改：&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;title: tags # 标签名字（可为空）&lt;br&gt;date: 2017-06-29 16:28:46&lt;br&gt;type: “tags” # 将页面的类型设置为 tags,主题将自动为这个页面显示为标签云&lt;/p&gt;
&lt;h2 id=&quot;comments-false-如果有启用多说-或者-Disqus-评论，默认页面也会带有评论。需要关闭的话，设置为-false&quot;&gt;&lt;a href=&quot;#comments-false-如果有启用多说-或者-Disqus-评论，默认页面也会带有评论。需要关闭的话，设置为-false&quot; class=&quot;headerlink&quot; title=&quot;comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false&quot;&gt;&lt;/a&gt;comments: false # 如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，设置为 false&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;type 有分类`categories` 标签`tags`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#### 侧栏&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;`sidebar`字段来控制侧栏的行为&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;其一是侧栏的位置`sidebar.position`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* left - 靠左放置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* right - 靠右放置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;其二是侧栏显示的时机`sidebar.display`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* post - 默认行为，在文章页面（拥有目录列表）时显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* always - 在所有页面中都显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* hide - 在所有页面中都隐藏（可以手动展开）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* remove - 完全移除&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;####  头像&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;`avatar`设置成头像的链接地址。其中，头像的链接地址可以是完整的互联网或站点内的地址（将头像放置主题目录下的 source/images/ 配置为avatar: /images/avatar.png）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#### 否显示阅读全文&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;将 `auto_excerpt` 的 `enable` 设置为 `ture` 则显示阅读全文&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Automatically-Excerpt-Not-recommend&quot;&gt;&lt;a href=&quot;#Automatically-Excerpt-Not-recommend&quot; class=&quot;headerlink&quot; title=&quot;Automatically Excerpt. Not recommend.&quot;&gt;&lt;/a&gt;Automatically Excerpt. Not recommend.&lt;/h1&gt;&lt;h1 id=&quot;Please-use-in-the-post-to-control-excerpt-accurately&quot;&gt;&lt;a href=&quot;#Please-use-in-the-post-to-control-excerpt-accurately&quot; class=&quot;headerlink&quot; title=&quot;Please use  in the post to control excerpt accurately.&quot;&gt;&lt;/a&gt;Please use
    
    </summary>
    
      <category term="other" scheme="http://yoursite.com/categories/other/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>第一篇博客</title>
    <link href="http://yoursite.com/2017/05/29/left/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/05/29/left/第一篇博客/</id>
    <published>2017-05-29T07:30:06.000Z</published>
    <updated>2017-06-29T09:39:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h1><p>一直想写博客的，但一直总是在忙项目，有时间也是玩会儿游戏，最近把游戏卸了，总算有时间了。以后会把写博客养成一个习惯，努力一个星期最少一篇，实在没时间就把之前写到印象笔记的文章重新整理一下。明天把搭建博客的过程写一下。</p>
<p>现在写下来激励自己，加油。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第一篇博客&quot;&gt;&lt;a href=&quot;#第一篇博客&quot; class=&quot;headerlink&quot; title=&quot;第一篇博客&quot;&gt;&lt;/a&gt;第一篇博客&lt;/h1&gt;&lt;p&gt;一直想写博客的，但一直总是在忙项目，有时间也是玩会儿游戏，最近把游戏卸了，总算有时间了。以后会把写博客养成一个习惯，
    
    </summary>
    
      <category term="left" scheme="http://yoursite.com/categories/left/"/>
    
    
      <category term="生活" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
